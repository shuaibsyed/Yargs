#!/bin/tcsh -f

# CMSC 216, Spring 2023, Project #9
# Public test 15 (public15)
#
# Runs yargs.x with "make" as its target program, with its standard input
# coming from the output of the "ls" command.  "ls" is being used to list
# (i.e., print to its standard output) the name of a makefile that is
# included in the project tarfile.  Several arguments appear on the command
# line of your program, to be used as arguments when "make" is run, to test
# whether yargs.x is correctly passing its own command-line arguments along
# to the target program.
#
# If you want to debug your code for this test, first run
#
#   \ls public15.Makefile > out
#
# Then run gdb yargs.x.  Then (perhaps after setting some breakpoints), in
# gdb, use the command:
#
#   run make -q -s -f < out
#
# (You can use a different name instead of "out", but if you use the name
# "out" and a file named "out" already exists you may have to remove it
# first.)
#
# (c) Larry Herman, 2023.  You are allowed to use this code yourself, but
# not to provide it to anyone else.

# The invocation below should cause your program to run the command:
#
# make -q -s -f public12.Makefile
#
# which should NOT build the first target in the makefile.  This is due to
# the argument -q, which causes make to not run any commands.  (-s causes
# make to not produce any output; we want to suppress any output that make
# would generate, so it does not interfere with the output of this test.)

ls public15.Makefile | ./yargs.x make -q -s -f

if (-e public15-testprogram.x) then
  # error exit
  echo "Problem!  Something didn't work right; public12-testprogram.x was"
  echo "created but it should not have been."
  exit 9
else
  # normal exit
  echo "Success!  public12-testprogram.x was not created, which is correct."
  exit 0
endif
